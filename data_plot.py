# plot data generated by main_qsvt.m
# ----------------------------------------------------------------------
#
# Author:           Yulong Dong, dongyl@berkeley.edu
# Version:          1.0
# Last revision:    5/11/2020
#
#  ----------------------------------------------------------------------

import numpy as np
import h5py
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.linalg as la
import pandas as pd
from scipy import stats

if __name__ == '__main__':
    kappa_list = [10,20,30]
    label_prefix = ['(a)', '(b)', '(c)']
    for data_file_prefix in ['data_qsvt', 'data_qsvt_herm']:
        f = h5py.File(data_file_prefix+'.mat','r')
        precision = np.array(f.get('precision'))[0]
        data_pd = []
        slope = []
        for kappa in kappa_list:
            temp = np.array(f.get('odd'+str(kappa))).transpose()
            temp = np.log10(temp)
            k = stats.linregress(temp[:,1], temp[:,0])
            slope.append(k[0])
            data_pd.append(pd.DataFrame(temp, columns=['ret','pert']))
            data_pd[-1]['kappa'] = kappa
        data_pd = pd.concat(data_pd)
        sns.set(style='darkgrid', font_scale=1.5)
        g = sns.lmplot(x='pert', y='ret', col='kappa', data=data_pd, scatter_kws={'alpha':0.15, 's':7})
        fig = g.fig
        for jj in range(len(fig.axes)):
            ax = fig.axes[jj]
            ax.set_title(label_prefix[jj] + r' $\kappa$=%d'%(kappa_list[jj]) + '\nslope=%.3f\n'%(slope[jj]) + r'$\Vert P^\vartriangleright(A)-A^{-1} \Vert$=%.3e'%(precision[jj]))
            ax.set_xlabel(r'$\log\ \Vert\tilde{A}-A\Vert$')
            if jj == 0:
                ax.set_ylabel(r'$\log\ \Vert P^\vartriangleright(\tilde{A})-P^\vartriangleright(A) \Vert$')
        fig.savefig(data_file_prefix+'.pdf',format='pdf',dpi=1000,bbox_inches='tight', pad_inches = 0)
